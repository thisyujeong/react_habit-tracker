{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","console","log","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","inputRef","React","createRef","formRef","ref","onSubmit","event","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","handleAdd","habits","map","id","onReset","Component","Navbar","totalCount","App","state","item","setState","filter","Date","now","handleReset","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4aa39ce.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nclass Habit extends PureComponent {\n  componentDidMount() {\n    console.log(`habit: ${this.props.habit.name} mounted`);\n  }\n  componentWillUnmount() {\n    console.log(`habit: ${this.props.habit.name} will unmounted`);\n  }\n\n  //\n\n  handleIncrement = () => {\n    this.props.onIncrement(this.props.habit);\n  };\n  handleDecrement = () => {\n    this.props.onDecrement(this.props.habit);\n  };\n  handleDelete = () => {\n    this.props.onDelete(this.props.habit);\n  };\n  render() {\n    const { name, count } = this.props.habit;\n\n    return (\n      <li className=\"habit\">\n        <span className=\"habit-name\"> {name} </span>\n        <span className=\"habit-count\"> {count} </span>\n        <div className=\"habit-btns\">\n          <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\n            <i className=\"fas fa-plus-square\"></i>\n          </button>\n          <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\n            <i className=\"fas fa-minus-square\"></i>\n          </button>\n          <button className=\"habit-button habit-delete\" onClick={this.handleDelete}>\n            <i className=\"fas fa-trash\"></i>\n          </button>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default Habit;\n","import React, { memo } from 'react';\n\n// state가 따로 없다면 함수형 컴포넌트 사용\nconst HabitAddForm = memo((props) => {\n  const inputRef = React.createRef();\n  const formRef = React.createRef();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const name = inputRef.current.value;\n    name && props.onAdd(name);\n\n    /* new habit 등록 후 input 비우기 - 방법 1, 방법 2*/\n    // inputRef.current.value = '';\n    formRef.current.reset();\n  };\n  return (\n    <form ref={formRef} className=\"add-form\" onSubmit={onSubmit}>\n      <input ref={inputRef} type=\"text\" className=\"add-input\" placeholder=\"Habit\" />\n      <button className=\"add-button\">Add</button>\n    </form>\n  );\n});\n\nexport default HabitAddForm;\n","import React, { Component } from 'react';\nimport Habit from './habit';\nimport HabitAddForm from './habitAddForm';\n\nclass Habits extends Component {\n  /* componentDidUpdate(){\n    // 컴포넌트가 업데이트 될 때마다 호출\n  } */\n  handleIncrement = (habit) => {\n    this.props.onIncrement(habit);\n  };\n\n  handleDecrement = (habit) => {\n    this.props.onDecrement(habit);\n  };\n\n  handleDelete = (habit) => {\n    this.props.onDelete(habit);\n  };\n  handleAdd = (name) => {\n    this.props.onAdd(name);\n  };\n\n  render() {\n    return (\n      <>\n        <HabitAddForm onAdd={this.handleAdd} />\n        <ul>\n          {this.props.habits.map((habit) => (\n            <Habit\n              key={habit.id}\n              habit={habit}\n              onIncrement={this.handleIncrement}\n              onDecrement={this.handleDecrement}\n              onDelete={this.handleDelete}\n            />\n          ))}\n        </ul>\n        <div className=\"habits-reset-wrap\">\n          <button className=\"habits-reset\" onClick={this.props.onReset}>\n            Reset All\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Habits;\n","import React, { PureComponent } from 'react';\n\nclass Navbar extends PureComponent {\n  render() {\n    return (\n      <div className=\"navbar\">\n        <i className=\"navbar-logo\">⚡️</i>\n        <span>Habit Tracker</span>\n        <span className=\"navbar-count\">{this.props.totalCount}</span>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport './app.css';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: 'Reading', count: 0 },\n      { id: 2, name: 'Running', count: 0 },\n      { id: 3, name: 'Coding', count: 0 },\n    ],\n  };\n\n  handleIncrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        // id가 같다면\n        return { ...habit, count: habit.count + 1 }; // deep copy\n      }\n      return item; // id가 같지 않다면 item 리턴\n    });\n    this.setState({ habits }); // habits: habits 좌변과 우변이 동일하면 한 단어로 축약가능.\n  };\n\n  handleDecrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        const count = habit.count - 1;\n        return { ...habit, count: count < 0 ? 0 : count };\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n\n  handleDelete = (habit) => {\n    const habits = this.state.habits.filter((item) => item.id !== habit.id);\n    this.setState({ habits });\n\n    /* \n    const habits = this.state.habits.filter((item) => item.id !== habit.id);\n    this.setState({ habits }); I \n    \n    내가 사용한 방식 / 이것도 맞는 방법이라고 한다!\n    const habits = [...this.state.habits];\n    const index = habits.indexOf(habit);\n    habits.splice(index, 1);\n    this.setState({ habits }); */\n  };\n\n  handleAdd = (name) => {\n    const habits = [...this.state.habits, { id: Date.now(), name, count: 0 }];\n    this.setState({ habits });\n  };\n\n  handleReset = () => {\n    const habits = this.state.habits.map((habit) => {\n      if (habit.count !== 0) {\n        return { ...habit, count: 0 };\n      }\n      return habit;\n    });\n\n    this.setState({ habits });\n  };\n\n  render() {\n    return (\n      <>\n        <Navbar totalCount={this.state.habits.filter((item) => item.count > 0).length} />\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}